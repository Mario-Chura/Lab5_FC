GMES (GIST Maxwell's Equations Solver) is a free Python package
for the electromagnetic simulation using FDTD method. This README 
file describes how to compile and set up GMES.

1. Download Latest Version
You can download the latest release at the GMES project page of 
sourceforge:

http://sourceforge.net/projects/gmes

The latest development version is always available from our svn 
repository:

http://sourceforge.net/p/gmes/code/

2. Compatibility
GMES follows the C++11 standard and is compatible to Python 2.5, 
thus it is OS portable in source code level.

2.1. GNU/Linux
GMES has been tested on Debian GNU/Linux 5.0.8 Lenny (32 bit), 
Ubuntu 12.04.1 LTS Precise Pangolin (32 & 64 bit).

2.2. Windows
GMES has been tested on Windows 7 Enterprise K Service Pack 1 (32 
& 64 bit). The recent version has not been tested on Windows, thus
it may have some compatibility issues.

2.3. Mac
GMES has not been tested on Mac. Any contributions are welcome.

3. Preliminaries

3.1. GNU/Linux
GMES uses various Python and non-Python programs. You will need 
the following programs to install and execute GMES. The following 
programs are provided as packages on Debian and Ubuntu 
distributions except the recent version of swig.

* python >= 2.5 (tested with 2.5.2 and 2.7.3) (Debian package: python)
* g++ >= 4.6.3 (to compile) (Debian package: g++)
* swig >= 2.0.7 (to compile)
* cython >= 0.9.8-1 (to compile) (Debian package: cython)
* numpy (Debian package: python-numpy)
* scipy (Debian package: python-scipy)
* matplotlib (Debian package: python-matplotlib)
* MPI for Python >= 1.2.2-3 (optional) (Debian package:	python-mpi4py) 
* mpich2 (Debian package: >= 1.4.1) (Debian package: mpich2)
* pytables (optional) (Debian package: python-tables)

3.2. Windows
We haven't tested the MPI environment of GMES on Windows. Any 
contributions are welcome. The followings are prerequisites to 
install and execute GMES on Windows.

* python >= 2.7.2
* MinGW with C++ compiler >= 20110802 (to compile)
* swig >= 2.0.4 (to compile)
* cython (to compile)
* numpy >= 1.6.1
* scipy >= 0.9.0
* matplotlib >= 1.1.0

4. Compile and Install
If you like to test the GMES without or before installation, 
follow 'compile for the inplace test' section. Otherwise, follow 
'compile' and 'install' sections in order. 

4.1. For GNU/Linux

4.1.1. compile for the inplace test
$ python setup.py build_ext --inplace

4.1.2. compile
$ python setup.py build_ext --swig-opts="-c++"

4.1.3. install
$ sudo python setup.py install build_ext --swig-opts="-c++"

4.2. For Windows

4.2.1. compile for the inplace test
$ python setup.py build_ext --inplace --compile=mingw32

4.2.2. compile
$ python setup.py build_ext --compile=mingw32

4.2.3. compile & install
$ sudo python setup.py install build_ext --compile=mingw32

5. Testing
If you completed the installation or compiled with inplace option,
you can test the proper execution of GMES using the unit tests in 
the 'tests' directory. If you see 'OK' without any error, it's OK.

$ python <test.py>

6. Execution Commands

6.1. GNU/Linux with MPI2
Your MPI2 implementation may requires pre- or post- commands to 
exploit the parallel environment. Refer the manuals of your MPI2 
implementation for these commands. <N> and <GMES SCRIPT> indicate 
the number of parallel process and your script which uses the GMES
package.
 
$ mpiexec -l -n <N> python-mpi <GMES SCRIPT>

Also, in the parallel environment, a MPI-enabled Python 
interpreter is required. Check the MPI for Python user manual at 
http://mpi4py.scipy.org/docs/usrman/.

7. User Manual
The current version of GMES does not have a separate user manual. 
However, you can start from examples in the 'examples' and 'tests'
directories. If you need more detailed documentations on the 
classes and parameters of GMES, please use the 'dir' and 'help'
command in the Python interpreter.

8. Participation
Please report any errors and submit patches (if possible)! Any 
contributions are welcome. If you would like to join the GMES 
development team or contribute to the distribution, please contact
the gmes-user mailing list, details at 
http://sourceforge.net/p/gmes/mailman/.

9. Known Issues

9.1. Matplotlib in Windows
The EPD version of the Matplotlib package which is required by 
fdtd.show_* methods does not handle multiple plots in multiple 
windows. Thus, on Windows, multiple real-time display windows 
using fdtd.show_* methods could freeze. The Linux version of 
matplotlib does not have this problem.

9.2. numpy.inf
Please use a large number instead of numpy.inf since GMES does not
correctly treat the value of numpy.inf as infinity.

9.3. Compile Failure on Windows
On Windows with EPD(<6.1) and MinGW, the compile command may die 
with the following error.

g++: build\temp.win32-2.5\Release\src\lib_pointwise_material.a: No such
file or directory

If you encounter this error, comment out the following third line 
from C:<Python Folder>\Lib\distutils\cygwinccompiler.py.

# dllwrap uses different options than gcc/ld
if self.linker_dll == "dllwrap":
    # extra_preargs.extend(["--output-lib", lib_file]) <= this line
    # for dllwrap we have to use a special option
    extra_preargs.extend(["--def", def_file])
    
9.4. Compile Failure on Windows
If you use EPD(>=7.1-2) with MinGW on Windows 7, you will 
encounter the following error message when you compile GMES.

In file included from c:\mingw\bin\../lib/gcc/mingw32/4.5.2/include/c++/cmath:629:0,
                 from c:\mingw\bin\../lib/gcc/mingw32/4.5.2/include/c++/complex:46,
                 from src\/pw_dcp.hh:19,
                 from src\pw_material_wrap.cpp:3243:
c:\mingw\bin\../lib/gcc/mingw32/4.5.2/include/c++/tr1_impl/cmath:203:11: error: '::hypot' has not been declared
error: command 'gcc' failed with exit status 1

This problem is not yet solved.

9.5. Warnings on Compilation
Cython sets '-Wunused-but-set-variable' compile option and it 
generates the following warnings during compilation.

src/material.c: In function ‘__pyx_pf_4gmes_8material_7Lorentz_10get_pw_material_hz’:
src/material.c:33412:13: warning: variable ‘__pyx_v_coords’ set but not used [-Wunused-but-set-variable]

These warnings are not harmful and you can safely ignore them.

9.6. Python 3 Support
GMES has not tested with Python 3.

 -- Kyungwon Chun (kwchun@gist.ac.kr)
